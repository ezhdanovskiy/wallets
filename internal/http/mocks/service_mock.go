// Code generated by MockGen. DO NOT EDIT.
// Source: dependencies.go
//
// Generated by this command:
//
//	mockgen -source=dependencies.go -destination=mocks/service_mock.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	dto "github.com/ezhdanovskiy/wallets/internal/dto"
	gomock "go.uber.org/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
	isgomock struct{}
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// CreateWallet mocks base method.
func (m *MockService) CreateWallet(arg0 dto.CreateWalletRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWallet", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateWallet indicates an expected call of CreateWallet.
func (mr *MockServiceMockRecorder) CreateWallet(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWallet", reflect.TypeOf((*MockService)(nil).CreateWallet), arg0)
}

// GetOperations mocks base method.
func (m *MockService) GetOperations(arg0 dto.OperationsFilter) ([]dto.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOperations", arg0)
	ret0, _ := ret[0].([]dto.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOperations indicates an expected call of GetOperations.
func (mr *MockServiceMockRecorder) GetOperations(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOperations", reflect.TypeOf((*MockService)(nil).GetOperations), arg0)
}

// IncreaseWalletBalance mocks base method.
func (m *MockService) IncreaseWalletBalance(arg0 dto.Deposit) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncreaseWalletBalance", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// IncreaseWalletBalance indicates an expected call of IncreaseWalletBalance.
func (mr *MockServiceMockRecorder) IncreaseWalletBalance(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncreaseWalletBalance", reflect.TypeOf((*MockService)(nil).IncreaseWalletBalance), arg0)
}

// Transfer mocks base method.
func (m *MockService) Transfer(arg0 dto.Transfer) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Transfer", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Transfer indicates an expected call of Transfer.
func (mr *MockServiceMockRecorder) Transfer(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Transfer", reflect.TypeOf((*MockService)(nil).Transfer), arg0)
}
