swagger: "2.0"
info:
  description: "Wallets API"
  version: "1.0.0"
  title: "Wallets"
host: "localhost:8080"
basePath: "/v1"
schemes:
  - "http"
  - "https"
paths:
  /wallets:
    post:
      tags:
        - "wallets"
      summary: "Add wallet"
      description: "Add wallet with unique name."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Add wallet request"
          required: true
          schema:
            $ref: "#/definitions/PostWalletRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: object
            default: null
        "400":
          description: "Invalid parameters"
          schema:
            $ref: "#/definitions/Error400Response"
        "500":
          description: "Internal error"
          schema:
            $ref: "#/definitions/Error500Response"
  /wallets/deposit:
    post:
      tags:
        - "wallets"
      summary: "Top up wallet"
      description: "Increase the wallet balance by a certain amount."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Wallet deposit request"
          required: true
          schema:
            $ref: "#/definitions/WalletDepositRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: object
            default: null
        "400":
          description: "Invalid parameters"
          schema:
            $ref: "#/definitions/Error400Response"
        "500":
          description: "Internal error"
          schema:
            $ref: "#/definitions/Error500Response"
  /wallets/transfer:
    post:
      tags:
        - "wallets"
      summary: "Transfer money"
      description: "Transferring money from one wallet to another within the available balance."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Transfer money request"
          required: true
          schema:
            $ref: "#/definitions/TransferMoneyRequest"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: object
            default: null
        "400":
          description: "Invalid parameters"
          schema:
            $ref: "#/definitions/Error400Response"
        "422":
          description: "Invalid parameters"
          schema:
            $ref: "#/definitions/Error422Response"
        "500":
          description: "Internal error"
          schema:
            $ref: "#/definitions/Error500Response"
  /operations:
    get:
      tags:
        - "operations"
      summary: "Get wallet operations"
      description: "Get wallet operations using filter."
      parameters:
        - in: query
          name: wallet
          required: true
          schema:
            type: string
          description: Wallet name
        - in: query
          name: type
          schema:
            type: string
          description: Operation type (deposit/withdrawal)
        - in: query
          name: start_date
          schema:
            type: integer
            format: timestamp
          description: The start date for the report (in seconds)
        - in: query
          name: end_date
          schema:
            type: integer
          description: The end date for the report (in seconds)
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
            default: 0
          description: The number of operations to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 20
          description: The numbers of operations to return
        - in: query
          name: format
          schema:
            type: string
            default: json
          description: Format of report (json/csv)
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/GetOperationsResponse"
        "400":
          description: "Invalid parameters"
          schema:
            $ref: "#/definitions/Error400Response"
        "500":
          description: "Internal error"
          schema:
            $ref: "#/definitions/Error500Response"
definitions:
  PostWalletRequest:
    type: object
    properties:
      name:
        type: string
        example: wallet01
  WalletDepositRequest:
    type: object
    properties:
      wallet:
        type: string
        example: wallet01
      amount:
        type: integer
        format: float64
        example: 3000.05
  TransferMoneyRequest:
    type: object
    properties:
      wallet_from:
        type: string
        example: wallet01
      wallet_to:
        type: string
        example: wallet02
      amount:
        type: integer
        format: float64
        example: 3000.05
  GetOperationsResponse:
    type: object
    properties:
      data:
        type: object
        properties:
          alerts:
            type: array
            items:
              type: object
              properties:
                wallet:
                  type: string
                  example: wallet01
                amount:
                  type: integer
                  format: float64
                  example: 3000.05
                type:
                  type: string
                  example: deposit
                other_wallet:
                  type: string
                  example: system
                timestamp:
                  type: string
                  example: 2021-05-16T19:43:03.953199Z
  Error400Response:
    type: object
    properties:
      error:
        type: string
        example: failed to decode body
  Error422Response:
    type: object
    properties:
      error:
        type: string
        example: not enough money
  Error500Response:
    type: object
    properties:
      error:
        type: string
        example: database error
